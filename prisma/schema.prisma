// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String
  name         String?
  password     String
  email        String   @unique
  phone        String?
  refreshToken String?
  avatar       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  role         Role     @default(User)
  Order        Order[]
  Blog         Blog[]
}

enum Role {
  Admin
  User
  Shipper
}

model Order {
  id          Int           @id @default(autoincrement())
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  OrderStatus OrderStatus[]
  OrderItem   OrderItem[]
}

model OrderStatus {
  id      Int             @id @default(autoincrement())
  order   Order           @relation(fields: [orderId], references: [id])
  orderId Int
  status  OrderStatusEnum
}

enum OrderStatusEnum {
  Pedding
  Delivered
  Cancelled
  Successful
}

model OrderItem {
  id               Int             @id @default(autoincrement())
  order            Order           @relation(fields: [orderId], references: [id])
  orderId          Int
  product          Product         @relation(fields: [productId], references: [id])
  productId        Int
  productVariant   ProductVariants @relation(fields: [productVariantId], references: [id])
  productVariantId Int
  quantity         Int
  salePecent       Int             @default(0)
}

model Product {
  id                Int                 @id @default(autoincrement())
  name              String
  images            String[]
  description       String              @default("")
  details           String              @default("")
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  ProductInCategory ProductInCategory[]
  ProductReview     ProductReview[]
  OrderItem         OrderItem[]
  ProductVariants   ProductVariants[]
}

model ProductVariants {
  id          Int         @id @default(autoincrement())
  product     Product     @relation(fields: [productId], references: [id])
  productId   Int
  price       Float
  salePercent Int?        @default(0)
  variant     String
  quantity    Int         @default(0)
  OrderItem   OrderItem[]
}

model ProductCategory {
  id                Int                 @id @default(autoincrement())
  name              String
  image             String
  ProductInCategory ProductInCategory[]
}

model ProductInCategory {
  product           Product         @relation(fields: [productId], references: [id])
  productId         Int
  category          ProductCategory @relation(fields: [productCategoryId], references: [id])
  productCategoryId Int

  @@id([productId, productCategoryId])
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  images    String[]
  rating    Int
}

model Blog {
  id             Int              @id @default(autoincrement())
  user           User             @relation(fields: [userId], references: [id])
  userId         Int
  content        String
  createAt       DateTime         @default(now())
  updateAt       DateTime         @updatedAt
  BlogInCategory BlogInCategory[]
}

model BlogCategory {
  id             Int              @id @default(autoincrement())
  name           String
  BlogInCategory BlogInCategory[]
}

model BlogInCategory {
  blog           Blog         @relation(fields: [blogId], references: [id])
  blogId         Int
  blogCategory   BlogCategory @relation(fields: [blogCategoryId], references: [id])
  blogCategoryId Int

  @@id([blogId, blogCategoryId])
}
